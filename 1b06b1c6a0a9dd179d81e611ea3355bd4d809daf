{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "147773ec_75ff1fec",
        "filename": "src/main/java/org/oran/dmaapadapter/tasks/JobDataDistributor.java",
        "patchSetId": 2
      },
      "lineNbr": 184,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2022-10-26T14:52:37Z",
      "side": 1,
      "message": "This code is duplicated in filterEndTime. Maybe create a method for it?",
      "range": {
        "startLine": 184,
        "startChar": 12,
        "endLine": 184,
        "endChar": 84
      },
      "revId": "1b06b1c6a0a9dd179d81e611ea3355bd4d809daf",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3dc4fb9_c8334c60",
        "filename": "src/main/java/org/oran/dmaapadapter/tasks/JobDataDistributor.java",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2022-10-26T14:52:37Z",
      "side": 1,
      "message": "Can there never be files of type JSON without being a ROP file? Since the name of the ROP file is standardized, to be able to parse the time info, would it not be safer to use some kind of regexp or similar to check that the name is a ROP file name instead?",
      "range": {
        "startLine": 199,
        "startChar": 34,
        "endLine": 199,
        "endChar": 39
      },
      "revId": "1b06b1c6a0a9dd179d81e611ea3355bd4d809daf",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae86e84_a8c6c58e",
        "filename": "src/main/java/org/oran/dmaapadapter/tasks/JobDataDistributor.java",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1000201
      },
      "writtenOn": "2022-10-26T14:52:37Z",
      "side": 1,
      "message": "This new code is not covered by any test",
      "revId": "1b06b1c6a0a9dd179d81e611ea3355bd4d809daf",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}